import java.nio.file.*

manifest {
    name = 'crukci-bioinformatics/nf-alignment'
    author = 'Richard Bowers'
    homePage = 'https://github.com/crukci-bioinformatics/nf-alignment'
    description = 'Alignment (including sample merging) for CRUK-CI use only.'
    mainScript = 'alignment.nf'
    nextflowVersion = '>=20.0.0'
    version = '4.0.2'
}

executor {
    $slurm {
        queueSize = 150
        pollInterval = '30sec'
        queue = 'general'
        clusterOptions = "--nodes=1 --open-mode=truncate"
    }
}

singularity.enabled = true
singularity.autoMounts = true

process {
    container = "crukcibioinformatics/alignment:4.0.2"

    errorStrategy = {
        task.exitStatus in [143,137,104,134,139] ? 'retry' : 'finish'
    }

    withLabel:bwa {
        cpus = 1
        memory = { 4.GB * task.attempt }
        time = { 2.hour + 2.hour * task.attempt }
        maxRetries = 2
    }

    withLabel:picard {
       cpus = 1
       memory = { 4.GB * 2 ** (task.attempt - 1) } // So 4, 8, 16 etc
       time = { 4.hour * task.attempt }
       maxRetries = 2
    }

    withLabel:coverage {
        cpus = 1
        memory = { 2.GB * task.attempt }
        time = { 2.hour * task.attempt }
        maxRetries = 2
    }
}

params {
    // Defaults if not defined otherwise in "alignment.config".
    markDuplicates = true
    mergeSamples = false
    createCoverage = false

    // Size of chunks for BWA & BWA-mem2.
    chunkSize = 10000000

    // Additional metrics.
    alignmentMetrics = true
    insertSizeMetrics = true
    wgsMetrics = false
    rnaseqMetrics = false

    // Metrics specific options.

    // CollectRNASeqMetrics STRAND_SPECIFICITY.
    // For strand-specific library prep. For unpaired reads, use FIRST_READ_TRANSCRIPTION_STRAND
    // if the reads are expected to be on the transcription strand.
    // Possible values: {NONE, FIRST_READ_TRANSCRIPTION_STRAND, SECOND_READ_TRANSCRIPTION_STRAND}
    // The checking code at the start of the pipeline sets the default according to
    // single read or paired end if it's not explicitly set in the user's alignment.config.

    rnaseqStrandSpecificity = ''

    // Folder structure and file names.

    // The default pattern and capture group for identifying a base name from CRUK-CI
    // FASTQ files. If any other file naming pattern is used, this will be set in
    // alignment.config.
    basenameExtractPattern = /(SLX-\d+\.\w+\.[-\w]+\.s_\d)\.r_\d+\.fq\.gz/
    basenameCaptureGroup = 1

    // Directory for FASTQ files. The default is just "fastq" in the pipeline directory.
    fastqDir = "fastq"

    // Directories for aligned files and merged sample BAMs.
    bamDir = "bam"
    sampleBamDir = "samplebam"

    // Default name for the driver CSV file.
    alignmentCSV = "alignment.csv"

    // Software versions.
    bwaVersion = "0.7.17"
    bwamem2Version = "2.2.1"
    starVersion = "2.7.7a"
    samtoolsVersion = "1.15.1"
    picardVersion = "2.27.3"
    bedtoolsVersion = "2.30.0"

    // Software paths (inside the container).
    java = "/usr/lib/jvm/jre-11/bin/java"
    bwa = "/opt/bwa-${bwaVersion}/bwa"
    bwamem2 = "/opt/bwa-mem2-${bwamem2Version}/bwa-mem2"
    star = "/opt/STAR-${starVersion}/bin/Linux_x86_64/STAR"
    samtools = "/opt/samtools-${samtoolsVersion}/bin/samtools"
    picard = "/opt/picard-${picardVersion}.jar"
    bedtools = "/opt/bedtools-${bedtoolsVersion}/bin"
    ucsctools = "/opt/ucsc_tools"
}

try
{
    includeConfig "${launchDir}/alignment.config"
}
catch (NoSuchFileException e)
{
    // We'll check for missing mandatory parameters as the pipeline attempts to start.
}


profiles {
    standard {
        if (!params.referenceRoot) {
            params.referenceRoot = '/mnt/scratchb/bioinformatics/reference_data/reference_genomes'
        }
        process.executor = 'local'
        executor.$local.cpus = 6
        executor.$local.memory = 20.GB
    }

    cluster {
        if (!params.referenceRoot) {
            params.referenceRoot = '/mnt/scratchb/bioinformatics/reference_data/reference_genomes'
        }
        process.executor = 'slurm'
    }

    bioinf {
        if (!params.referenceRoot) {
            params.referenceRoot = '/data/reference_data/scratchb/reference_genomes'
        }
        process.executor = 'local'
        executor.$local.cpus = 28
        executor.$local.memory = 180.GB
    }
}


// https://www.nextflow.io/docs/latest/tracing.html
timeline {
    enabled = true
    file = "reports/execution_timeline.html"
}
report {
    enabled = true
    file = "reports/execution_report.html"
}
trace {
    enabled = false
    file = "reports/execution_trace.txt"
}
dag {
    enabled = false
    file = "reports/pipeline_dag.svg"
}
