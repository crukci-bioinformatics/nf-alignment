manifest {
    name = 'crukci-bioinformatics/nf-alignment'
    author = 'Richard Bowers'
    homePage = 'https://github.com/crukci-bioinformatics/nf-alignment'
    description = 'Alignment (including sample merging) for CRUK-CI use only.'
    mainScript = 'alignment.nf'
    nextflowVersion = '>=20.0.0'
    version = '4.1.0'
}

executor {
    $slurm {
        queueSize = 200
        pollInterval = '30sec'
        clusterOptions = "--nodes=1 --open-mode=truncate"
    }
}

singularity.enabled = true
singularity.autoMounts = true

process {
    container = "crukcibioinformatics/alignment:${manifest.version}"

    errorStrategy = {
        task.exitStatus in [ 104, 134, 137..140 ].flatten() ? 'retry' : 'finish'
    }

    cpus = 1
    memory = 1.GB
    time = 1.hour

    withLabel:bwa {
        memory = { 4.GB * task.attempt }
        time = { 2.hour + 2.hour * task.attempt }
        maxRetries = 2
    }

    withLabel:picard {
       memory = { 4.GB * 2 ** (task.attempt - 1) } // So 4, 8, 16 etc
       time = { 4.hour * task.attempt }
       maxRetries = 2
    }

    withLabel:metrics {
        errorStrategy = {
            task.exitStatus in [143,137,104,134,139] ? 'retry' : 'ignore'
        }
    }

    withLabel:coverage {
        memory = { 2.GB * task.attempt }
        time = { 2.hour * task.attempt }
        maxRetries = 2
    }
}

params {
    // Defaults if not defined otherwise in "nextflow.config".
    markDuplicates = true
    mergeSamples = false
    createCoverage = false

    // Size of chunks for BWA & BWA-mem2.
    chunkSize = 10000000

    // Additional metrics.
    alignmentMetrics = true
    insertSizeMetrics = true
    wgsMetrics = false
    rnaseqMetrics = false

    // Metrics specific options.

    // CollectRNASeqMetrics STRAND_SPECIFICITY.
    // For strand-specific library prep. For unpaired reads, use FIRST_READ_TRANSCRIPTION_STRAND
    // if the reads are expected to be on the transcription strand.
    // Possible values: {NONE, FIRST_READ_TRANSCRIPTION_STRAND, SECOND_READ_TRANSCRIPTION_STRAND}
    // The checking code at the start of the pipeline sets the default according to
    // single read or paired end if it's not explicitly set in the user's nextflow.config.

    rnaseqStrandSpecificity = ''

    // Folder structure and file names.

    // The default pattern and capture group for identifying a base name from CRUK-CI
    // FASTQ files. If any other file naming pattern is used, this will be set in
    // nextflow.config.
    basenameExtractPattern = /(SLX-\d+\.\w+\.[-\w]+\.s_\d)\.r_\d+\.fq\.gz/
    basenameCaptureGroup = 1

    // Directory for FASTQ files. The default is "fastq" in the pipeline directory.
    fastqDir = "${launchDir}/fastq"

    // Directories for aligned files and merged sample BAMs.
    bamDir = "${launchDir}/bam"
    sampleBamDir = "${launchDir}/samplebam"

    // Default name for the driver CSV file.
    alignmentCSV = "${launchDir}/alignment.csv"

    // Software versions. Used in the paths of standard reference genomes.
    bwaVersion = "0.7.17"
    bwamem2Version = "2.2.1"
    starVersion = "2.7.10b"
}

profiles {
    standard {
        if (!params.referenceRoot) {
            params.referenceRoot = '/mnt/scratcha/bioinformatics/reference_data/reference_genomes'
        }
        process.executor = 'local'
        executor.$local.cpus = 6
        executor.$local.memory = 20.GB
    }

    cluster {
        if (!params.referenceRoot) {
            params.referenceRoot = '/mnt/scratcha/bioinformatics/reference_data/reference_genomes'
        }
        process.executor = 'slurm'
        executor.$slurm.queue = 'general'
    }

    // Same as the "cluster" profile.
    general {
        if (!params.referenceRoot) {
            params.referenceRoot = '/mnt/scratcha/bioinformatics/reference_data/reference_genomes'
        }
        process.executor = 'slurm'
        executor.$slurm.queue = 'general'
    }

    // The new section of the cluster, the "epic" queue.
    epic {
        if (!params.referenceRoot) {
            params.referenceRoot = '/mnt/scratchc/bioinformatics/reference_data/reference_genomes'
        }
        process.executor = 'slurm'
        executor.$slurm.queue = 'epic'
    }

    bioinf {
        if (!params.referenceRoot) {
            params.referenceRoot = '/mnt/nas-data/bioinformatics/shared_folders/reference_data/2023/reference_genomes'
        }
        process.executor = 'local'
        executor.$local.cpus = 28
        executor.$local.memory = 180.GB
    }
}


// https://www.nextflow.io/docs/latest/tracing.html
timeline {
    enabled = true
    file = "reports/execution_timeline.html"
}
report {
    enabled = true
    file = "reports/execution_report.html"
}
trace {
    enabled = false
    file = "reports/execution_trace.txt"
}
dag {
    enabled = false
    file = "reports/pipeline_dag.svg"
}
